// <auto-generated />
using System;
using ControlEquiposComputo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlEquiposComputo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControlEquiposComputo.Models.Equipo", b =>
                {
                    b.Property<int>("EquipoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipoID"));

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LaboratorioID")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEquipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipoID");

                    b.HasIndex("LaboratorioID");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Incidente", b =>
                {
                    b.Property<int>("IncidenteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncidenteID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EquipoID")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaIncidente")
                        .HasColumnType("datetime2");

                    b.Property<int>("LaboratorioID")
                        .HasColumnType("int");

                    b.Property<int>("TecnicoID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("IncidenteID");

                    b.HasIndex("EquipoID");

                    b.HasIndex("LaboratorioID");

                    b.HasIndex("TecnicoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Incidentes");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Laboratorio", b =>
                {
                    b.Property<int>("LaboratorioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LaboratorioID"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("NombreLaboratorio")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Responsable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LaboratorioID");

                    b.ToTable("Laboratorios");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Mantenimiento", b =>
                {
                    b.Property<int>("MantenimientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MantenimientoID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaMantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("TecnicoID")
                        .HasColumnType("int");

                    b.HasKey("MantenimientoID");

                    b.HasIndex("EquipoID");

                    b.HasIndex("TecnicoID");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Reserva", b =>
                {
                    b.Property<int>("ReservaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaID"));

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("LaboratorioID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ReservaID");

                    b.HasIndex("LaboratorioID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Tecnico", b =>
                {
                    b.Property<int>("TecnicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TecnicoID"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Especialidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TecnicoID");

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.UsoEquipo", b =>
                {
                    b.Property<int>("UsoEquipoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsoEquipoID"));

                    b.Property<string>("Actividad")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EquipoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaUso")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("UsoEquipoID");

                    b.HasIndex("EquipoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("UsoEquipos");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Equipo", b =>
                {
                    b.HasOne("ControlEquiposComputo.Models.Laboratorio", "Laboratorio")
                        .WithMany("Equipos")
                        .HasForeignKey("LaboratorioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Incidente", b =>
                {
                    b.HasOne("ControlEquiposComputo.Models.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoID");

                    b.HasOne("ControlEquiposComputo.Models.Laboratorio", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("LaboratorioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlEquiposComputo.Models.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlEquiposComputo.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Laboratorio");

                    b.Navigation("Tecnico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Mantenimiento", b =>
                {
                    b.HasOne("ControlEquiposComputo.Models.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlEquiposComputo.Models.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Reserva", b =>
                {
                    b.HasOne("ControlEquiposComputo.Models.Laboratorio", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("LaboratorioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlEquiposComputo.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.UsoEquipo", b =>
                {
                    b.HasOne("ControlEquiposComputo.Models.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlEquiposComputo.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlEquiposComputo.Models.Laboratorio", b =>
                {
                    b.Navigation("Equipos");
                });
#pragma warning restore 612, 618
        }
    }
}
